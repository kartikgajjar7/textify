// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // directUrl = env("DATABASE_URL_UNPOOLED")
}
generator client {
  provider = "prisma-client-js"
}
enum UserRole{
  PRO
  NORMAL
}
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole?
  Documents     Document[]
  accounts      Account[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Document {
  id        String    @id @default(cuid())
  title     String
  content   String?
  parentId  String?
  parent    Document? @relation("DocumentHierarchy", fields: [parentId], references: [id])
  children  Document[] @relation("DocumentHierarchy")
  userId    String
  user      User      @relation(fields: [userId], references: [id])  // Link to User model
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}